input {
  tcp {
    port => "8080"
    tags => ["heroku_syslog"]
  }
}

filter {
  if "heroku router" in [message] {
    grok {
      match => { "message" => "%{NUMBER:priority} <%{NUMBER:facility}>%{NUMBER:version} %{TIMESTAMP_ISO8601:timestamp} %{DATA:app} %{DATA:process} - at=%{WORD:log_level} method=%{WORD:http_method} path=\"%{URIPATHPARAM:request_path}\" host=%{IPORHOST:request_host} request_id=%{UUID:request_id} fwd=\"%{IPORHOST:fwd_ip}\" dyno=%{DATA:dyno} connect=%{NUMBER:connect}ms service=%{NUMBER:service}ms status=%{NUMBER:status} bytes=%{NUMBER:bytes} protocol=%{WORD:protocol}" }
      remove_field => [ "message", "event" ]
    }
  } else {
    drop {}
  }
}

output {
    elasticsearch {
        hosts => ["${ES_HOST_API_USAGE_PROD}"]
        index => "openalex-heroku-logs-%{+YYYY.MM.dd}"
        user => "${ES_USER_PROD}"
        password => "${ES_PASSWORD_PROD}"
    }
}