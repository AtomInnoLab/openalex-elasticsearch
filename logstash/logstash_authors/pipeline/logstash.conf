input {
    jdbc {
        jdbc_driver_library => "/usr/share/jars/postgresql-42.3.5.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_connection_string => "${JDBC_URL_PROD}"
        jdbc_user => "${JDBC_USER_PROD}"
        jdbc_password => "${JDBC_PASSWORD_PROD}"
        jdbc_paging_enabled => true
        jdbc_page_size => 500000
        last_run_metadata_path => "/usr/share/sql_last_value.yml"
        schedule => "0 * * * *"
        statement => "SELECT json_save, updated from mid.json_authors WHERE updated > :sql_last_value order by updated"
        use_column_value => true
        tracking_column => updated
        tracking_column_type => "timestamp"
    }
}

filter {
      mutate {
         gsub => [
          "json_save", "[\r\n]", "",
          "json_save", "[\t]", " "
        ]
      }
      json {
        source => "json_save"
      }
      if "_jsonparsefailure" in [tags] {
          mutate {
             gsub => [
              "json_save", "[\\]", ""
            ]
          }
          json {
             source => "json_save"
          }
      }

      mutate {
        remove_field => ["json_save", "version"]
      }

      if ![id] {
        drop {}
      }
}

output {
    elasticsearch {
        hosts => ["${ES_HOST_PROD}"]
        index => "authors-v8"
        user => "${ES_USER_PROD}"
        password => "${ES_PASSWORD_PROD}"
        document_id => "%{id}"
    }

    # 同步成功后更新PostgreSQL记录状态
    if "_ingest_ok" in [tags] {
        jdbc {
            driver_jar_path => "/usr/share/jars/postgresql-42.3.5.jar"
            driver_class => "org.postgresql.Driver"
            connection_string => "${JDBC_URL_PROD}"
            username => "${JDBC_USER_PROD}"
            password => "${JDBC_PASSWORD_PROD}"
            statement => [
                "UPDATE mid.json_authors SET sync_status = 'synced_to_es', synced_at = CURRENT_TIMESTAMP WHERE id = ?",
                "%{id}"
            ]
            plugin_timezone => "UTC"
        }
    }

#      stdout { }
}